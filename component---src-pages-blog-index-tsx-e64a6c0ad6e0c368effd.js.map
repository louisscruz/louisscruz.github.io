{"version":3,"file":"component---src-pages-blog-index-tsx-e64a6c0ad6e0c368effd.js","mappings":"6IASMA,EAAcC,EAAAA,QAAAA,GAAAA,WAAH,6DAAGA,CAAH,kCAKXC,EAAKD,EAAAA,QAAAA,GAAAA,WAAH,oDAAGA,CAAH,gBAIFE,EAAcF,EAAAA,QAAAA,MAAAA,WAAH,6DAAGA,CAAH,sCAKXG,EAAaH,EAAAA,QAAAA,MAAAA,WAAH,4DAAGA,CAAH,oBAIVI,EAAOC,EAAAA,MAAsB,gBAAGC,EAAH,EAAGA,KAAH,OACjC,gCACE,mCACA,gBAACL,EAAD,KACGK,EAAKC,OAAOC,MAAMC,KAAI,SAAAC,GAAS,IAAD,EAC7B,EAEIA,EADFC,KAAQC,EADV,EACUA,QAASC,EADnB,EACmBA,YAAaC,EADhC,EACgCA,GAAIC,EADpC,EACoCA,KAAMC,EAD1C,EAC0CA,WAEpCC,EAAK,UAAGP,EAAKC,KAAKE,mBAAb,aAAG,EAAuBI,MAC/BC,EAAM,SAASH,GAAU,EAE/B,OACE,gBAAChB,EAAD,CAAaoB,IAAKL,GAChB,gBAAC,EAAAM,KAAD,CAAMC,GAAIH,GAAMD,GAASH,GACK,iBAAtBD,MAAAA,OAAP,EAAOA,EAAaS,MACnB,gBAACpB,EAAD,KAAcW,EAAYS,MACxB,KACmB,iBAAfN,EACN,gBAACb,EAAD,KACGa,EADH,IAC+B,IAAfA,EAAmB,SAAW,UAD9C,YAGE,KACJ,yBACGJ,EAAS,IACV,gBAAC,EAAAQ,KAAD,CAAMC,GAAIH,EAAK,6BAA4BD,GAA3C,uBAqCd","sources":["webpack://website/./src/pages/blog/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport type { GetAllBlogPostsQuery } from '../../../graphql-types';\n\ninterface BlogProps {\n  data: GetAllBlogPostsQuery;\n}\n\nconst PostPreview = styled.li`\n  list-style: none;\n  height: 80px;\n`;\n\nconst Ul = styled.ul`\n  padding: 0;\n`;\n\nconst PublishDate = styled.small`\n  display: block;\n  font-style: italic;\n`;\n\nconst TimeToRead = styled.small`\n  display: block;\n`;\n\nconst Blog = React.memo<BlogProps>(({ data }) => (\n  <>\n    <h2>Posts</h2>\n    <Ul>\n      {data.allMdx.edges.map(edge => {\n        const {\n          node: { excerpt, frontmatter, id, slug, timeToRead },\n        } = edge;\n        const title = edge.node.frontmatter?.title;\n        const url = `/blog/${slug}` || '/blog';\n\n        return (\n          <PostPreview key={id}>\n            <Link to={url}>{title || id}</Link>\n            {typeof frontmatter?.date === 'string' ? (\n              <PublishDate>{frontmatter.date}</PublishDate>\n            ) : null}\n            {typeof timeToRead === 'number' ? (\n              <TimeToRead>\n                {timeToRead} {timeToRead === 1 ? 'minute' : 'minutes'} to read\n              </TimeToRead>\n            ) : null}\n            <p>\n              {excerpt}{' '}\n              <Link to={url} aria-label={`Read more of ${title}`}>\n                read more\n              </Link>\n            </p>\n          </PostPreview>\n        );\n      })}\n    </Ul>\n  </>\n));\n// allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n\nexport const pageQuery = graphql`\n  query GetAllBlogPosts {\n    allMdx(sort: { fields: frontmatter___date, order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          slug\n          excerpt(pruneLength: 200, truncate: false)\n          timeToRead\n          frontmatter {\n            title\n            date(formatString: \"MMMM D, YYYY\")\n          }\n          wordCount {\n            paragraphs\n            sentences\n            words\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n"],"names":["PostPreview","styled","Ul","PublishDate","TimeToRead","Blog","React","data","allMdx","edges","map","edge","node","excerpt","frontmatter","id","slug","timeToRead","title","url","key","Link","to","date"],"sourceRoot":""}